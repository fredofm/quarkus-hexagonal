openapi: '3.0.2'
info:
  title: Loans REST API
  version: '1.0'
  contact: 
    name: API Support
    url: http://www.example.com/support
    email: support@example.com  
  license: 
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  
servers:
  - url: /api/v1

paths:
  /loans:
    get:
      operationId: getAllLoans
      description: Obtain information about a list of loans
      responses:
        '200':
          description:  Successfully returned a list of loans
          content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Loan'
    post:
      operationId: createLoan
      description: Create a new loan
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Loan"
      responses:
        200:
          content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Loan"
          description: "New loan created successfully"
  /loans/{id}:
    get:
      operationId: getLoanById
      description: Obtain information about a loan from his unique id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully returned a loan from his unique id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    delete:
      operationId: deleteLoanById
      description: Obtain information about a loan from his unique id
      parameters:
          - in: path
            name: id
            required: true
            schema:
                type: string
                format: uuid
      responses:
          204:
            description: "Loan deleted successfully"
            content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ResponseMessage'
            
components:
  schemas:
    ResponseMessage: 
      type: object
      description: Return messages to the client.
      properties:
        message:
          type: string
          description: Response message
    ResponseError: 
      type: object
      description: Return messages to the client typically when a error occurs.
      properties:
        error:
          type: string
          description: Response error
    Loan: 
      type: object
      description: Loan model for API layer
      required:
        - id
        - name
      properties:
        id:
          type: string
          description: Unique identifier
          format: uuid
        numberOfYears:
          type: integer
          description: Number of years
          format: int32
        loanAmount:
          type: integer
          description: Loan amount
          format: int64
        annualInterestRate:
          type: number
          description: Annual interest rate
          format: double
        userId:
          type: string
          description: Unique user identifier
          format: uuid
        loanDate:
          type: string
          format: date-time
          description: Loan date as defined by date-time - RFC3339
        loanState:
          type: string
          enum: [APPROVED, REJECTED, PENDING]
            
  # Basic authentication
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    api_key:
      type: apiKey
      name: api_key
      in: header
    petstore_auth:
      type: oauth2
      flows: 
        implicit:
          authorizationUrl: http://example.org/api/oauth/dialog
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
security:
  - BasicAuth: []



